<Page
    x:Class="Inventory.Presentation.Views.Products.ProductsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:animations="using:CommunityToolkit.WinUI.Animations"
    xmlns:behaviors="using:Inventory.Presentation.Behaviors"
    xmlns:customCommandBars="using:Inventory.Presentation.Controls.CustomCommandBars"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:interactivityCore="using:Microsoft.Xaml.Interactions.Core"
    xmlns:models="using:Inventory.Application.Models"
    xmlns:viewModels="using:Inventory.Application.ViewModels.Products"
    behaviors:NavigationViewHeaderBehavior.HeaderMode="Minimal"
    d:DataContext="{d:DesignInstance Type=viewModels:ProductsViewModel}"
    ScrollViewer.VerticalScrollBarVisibility="Disabled">

    <interactivity:Interaction.Behaviors>
        <interactivityCore:EventTriggerBehavior EventName="Loaded">
            <interactivityCore:EventTriggerBehavior.Actions>
                <interactivityCore:InvokeCommandAction Command="{x:Bind ViewModel.LoadedCommand}" />
            </interactivityCore:EventTriggerBehavior.Actions>
        </interactivityCore:EventTriggerBehavior>
    </interactivity:Interaction.Behaviors>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <TextBlock Style="{ThemeResource TitleTextBlockStyle}" Text="{x:Bind ViewModel.Items.Count, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter='Products ({0})'}" />

        <customCommandBars:MultipleItemsCommandBar
            Grid.Column="1"
            AddCommand="{x:Bind ViewModel.CreateNewItemCommand}"
            DeleteCommand="{x:Bind ViewModel.DeleteItemsCommand}"
            IsSelectionMode="{x:Bind ViewModel.IsSelectionMode, Mode=TwoWay}"
            SelectedItems="{x:Bind gridView.SelectedItems}" />

        <GridView
            x:Name="gridView"
            Grid.Row="1"
            Grid.ColumnSpan="2"
            animations:Connected.ListItemElementName="itemThumbnail"
            animations:Connected.ListItemKey="animationKeyContentGrid"
            IsItemClickEnabled="{x:Bind ViewModel.IsSelectionMode, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
            ItemsSource="{x:Bind ViewModel.Items, Mode=OneWay}"
            SelectionMode="{x:Bind ViewModel.IsSelectionMode, Converter={StaticResource SelectionModeToBooleanConverter}, Mode=OneWay}">

            <interactivity:Interaction.Behaviors>
                <interactivityCore:EventTriggerBehavior EventName="ItemClick">
                    <interactivityCore:InvokeCommandAction Command="{x:Bind ViewModel.ItemClickedCommand}" CommandParameter="{x:Bind gridView.SelectedValue}" />
                </interactivityCore:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>

            <GridView.ItemTemplate>
                <DataTemplate x:DataType="models:ProductModel">
                    <Grid
                        x:Name="itemThumbnail"
                        Padding="{StaticResource XSmallLeftTopRightBottomMargin}"
                        Background="{ThemeResource CardBackgroundFillColorDefaultBrush}">

                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">

                            <Border CornerRadius="20">
                                <Image
                                    Width="160"
                                    Height="160"
                                    Source="{x:Bind ImageSource, Mode=OneWay}"
                                    Stretch="Fill" />
                            </Border>

                            <TextBlock
                                Margin="{StaticResource XXSmallTopMargin}"
                                HorizontalAlignment="Left"
                                Style="{ThemeResource BodyTextStyle}"
                                Text="{x:Bind Name}" />

                            <TextBlock
                                Margin="{StaticResource XXSmallTopMargin}"
                                HorizontalAlignment="Left"
                                Style="{ThemeResource DetailBodyBaseMediumStyle}"
                                Text="{x:Bind Category}" />

                        </StackPanel>
                    </Grid>
                </DataTemplate>

            </GridView.ItemTemplate>

        </GridView>
    </Grid>
</Page>