<UserControl
    x:Class="Inventory.Presentation.Controls.CustomCommandBars.CustomCommandBar"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:enums="using:Inventory.Presentation.Controls.CustomCommandBars.Enums"
    xmlns:triggers="using:CommunityToolkit.WinUI.UI.Triggers">

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <TextBlock Grid.Column="0" Text="{x:Bind Title, Mode=OneWay}" />

        <CommandBar
            Grid.Column="1"
            DefaultLabelPosition="Right"
            OverflowButtonVisibility="Collapsed">
            
            <AppBarButton
                x:Name="addButton"
                HorizontalAlignment="Left"
                Command="{x:Bind AddCommand}"
                Icon="Add"
                Label="Add" />

            <AppBarButton
                x:Name="editButton"
                HorizontalAlignment="Left"
                Command="{x:Bind EditCommand}"
                Icon="Edit"
                Label="Edit" />

            <AppBarButton
                x:Name="cancelButton"
                HorizontalAlignment="Left"
                Command="{x:Bind CancelCommand}"
                Icon="Cancel"
                Label="Cancel" />

            <AppBarButton
                x:Name="saveButton"
                HorizontalAlignment="Left"
                Command="{x:Bind SaveCommand}"
                Icon="Save"
                Label="Save" />

            <AppBarButton
                x:Name="deleteButton"
                HorizontalAlignment="Left"
                Command="{x:Bind DeleteCommand}"
                Icon="Delete"
                Label="Delete" />

            <AppBarToggleButton Icon="SelectAll" Label="Select" />

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommandBarModeVisualState">
                    <VisualState x:Name="EditDeleteMode">
                        <VisualState.StateTriggers>
                            <triggers:IsEqualStateTrigger Value="{x:Bind CommandBarMode, Mode=OneWay}">
                                <triggers:IsEqualStateTrigger.To>
                                    <enums:CommandBarMode>EditDelete</enums:CommandBarMode>
                                </triggers:IsEqualStateTrigger.To>
                            </triggers:IsEqualStateTrigger>
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Target="addButton.Visibility" Value="Collapsed" />
                            <Setter Target="cancelButton.Visibility" Value="Collapsed" />
                            <Setter Target="saveButton.Visibility" Value="Collapsed" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="AddEditDeleteMode">
                        <VisualState.StateTriggers>
                            <triggers:IsEqualStateTrigger Value="{x:Bind CommandBarMode, Mode=OneWay}">
                                <triggers:IsEqualStateTrigger.To>
                                    <enums:CommandBarMode>AddEditDelete</enums:CommandBarMode>
                                </triggers:IsEqualStateTrigger.To>
                            </triggers:IsEqualStateTrigger>
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Target="cancelButton.Visibility" Value="Collapsed" />
                            <Setter Target="saveButton.Visibility" Value="Collapsed" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="CancelSaveMode">
                        <VisualState.StateTriggers>
                            <triggers:IsEqualStateTrigger Value="{x:Bind CommandBarMode, Mode=OneWay}">
                                <triggers:IsEqualStateTrigger.To>
                                    <enums:CommandBarMode>CancelSave</enums:CommandBarMode>
                                </triggers:IsEqualStateTrigger.To>
                            </triggers:IsEqualStateTrigger>
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Target="addButton.Visibility" Value="Collapsed" />
                            <Setter Target="editButton.Visibility" Value="Collapsed" />
                            <Setter Target="deleteButton.Visibility" Value="Collapsed" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </CommandBar>

        <AutoSuggestBox
            Grid.Column="2"
            Width="200"
            Height="38"
            PlaceholderText="Search"
            QueryIcon="Find" />

    </Grid>

</UserControl>